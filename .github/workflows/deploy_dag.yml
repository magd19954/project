name: Deploy to Google Cloud

# This workflow runs whenever there is a push event to the repository.
on: [push]

jobs:
  deploy-dags:  # A descriptive job ID for deploying DAGs to Google Cloud Storage
    permissions:
      # Setting permissions for the workflow job. 
      # 'contents: read' allows reading repository content.
      # 'id-token: write' allows generating ID tokens needed for authentication with Google Cloud.
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest  # The job will run on the latest version of an Ubuntu runner

    env:
      # Environment variable for the Google Cloud Storage bucket name.
      # Replace 'your-bucket-name' with your actual bucket name.
      DAGS_BUCKET: 'us-central1-ecommerce-custo-733ad405-bucket'  

    steps:
    - name: Checkout repository  # Step to check out the repository code into the workflow.
      uses: actions/checkout@v4  # Uses the GitHub Actions checkout action.

    - name: Authenticate to Google Cloud  # Step to authenticate the workflow to Google Cloud.
      uses: google-github-actions/auth@v2  # Uses Google GitHub Actions to authenticate.
      with:
        # Uses a secret containing the Google Cloud service account key JSON.
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Upload DAGs to GCS  # Step to upload DAGs to a specified Google Cloud Storage bucket.
      uses: google-github-actions/upload-cloud-storage@v2  # Uses Google GitHub Actions to upload files to GCS.
      with:
        # Specifies the directory to upload. 'dags' should be a directory in your repository.
        path: 'dags'
        # Uses the environment variable for the bucket name to specify the GCS destination path.
        destination: "${{ env.DAGS_BUCKET }}/dags"
        # Disable processing of the .gcloudignore file if present.
        process_gcloudignore: false
        # Ensures the files are uploaded directly into the destination without creating a parent folder.
        parent: false

    
